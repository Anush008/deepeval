name: Run pytest in matrix

on:
  pull_request:

jobs:
  examples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: dependencies-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            dependencies-${{ matrix.python-version }}-
            dependencies-

      - name: Install dependencies
        env:
          python-version: ${{ matrix.python-version }}
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install . pytest-rerunfailures pytest-asyncio

      - name: Run Unit Tests (pytest)
        env:
          python-version: ${{ matrix.python-version }}
          CONFIDENT_AI_API_KEY: ${{ secrets.API_KEY_ENV }}
          CONFIDENT_AI_IMP_ID: ${{ secrets.CONFIDENT_AI_IMP_ID }}
        run: |
          python -m pytest -x

      # - name: Discover test files
      #   id: discover-tests
      #   run: |
      #     echo "::set-output name=test_files::$(find tests/ -name "test_*.py" | xargs)"

      # - name: Run Unit Tests (pytest)
      #   env:
      #     python-version: ${{ matrix.python-version }}
      #     CONFIDENT_AI_API_KEY: ${{ secrets.API_KEY_ENV }}
      #     CONFIDENT_AI_IMP_ID: ${{ secrets.CONFIDENT_AI_IMP_ID }}
      #   run: |
      #     python -c "import sys; print(sys.version)"
      #     IFS=" " read -r -a TEST_FILES <<< "${{ steps.discover-tests.outputs.test_files }}"
      #     for TEST_FILE in "${TEST_FILES[@]}"; do
      #       python -m pytest -x $TEST_FILE
      #     done
