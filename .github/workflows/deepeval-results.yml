name: Capture and comment stdout

on:
  push:

jobs:
  comment-pr-with-stdout:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run your command and capture stdout
        id: capture-stdout
        run: |
          # Replace this command with the one you want to run and capture stdout
          echo "This is a sample command and its stdout."
          echo "::set-output name=stdout::$(echo 'This is a sample command and its stdout.')"

      - name: Comment PR with stdout
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const stdout = process.env['STDOUT'] + "\n\n```\n" + process.env['STDOUT'] + "\n```";
            try {
              const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
              const response = await octokit.pulls.createReview({
                owner: github.context.repo.owner,
                repo: github.context.repo.repo,
                pull_number: github.context.issue.number,
                body: stdout,
                event: "COMMENT"
              });
              console.log(response);
            } catch (error) {
              console.error(error);
            }
