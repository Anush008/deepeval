name: DeepEval Test Run Example

# This is an example YML file to show the results of a DeepEval test run to a PR

on:
  pull_request:


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: Install project
        run: poetry install --no-interaction

      - name: Run tests
        run: |
          source .venv/bin/activate
          python tests/test_without_pytest.py
          deepeval test run tests/test_quickstart.py > output.txt 2>&1

      - name: Remove ANSI codes
        run: sed -i -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g" output.txt

      - name: Set test_result
        run: echo "test_result<<EOF" >> $GITHUB_ENV && cat output.txt >> $GITHUB_ENV && echo "EOF" >> $GITHUB_ENV

      - name: Comment PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          hide_and_recreate: true
          hide_classify: "OUTDATED"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            Thanks for running DeepEval ðŸ˜Ž
            ```
            ${{ env.test_result }}

